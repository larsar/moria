<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id$ -->

<project xmlns:j="jelly:core"
   			 xmlns:m="jelly:maven"
         xmlns:u="jelly:util"
         default="project:install">
   
   
  <!-- 
       A number of filename fixes for Windows users.
  -->
  <preGoal name="build:start">
  <tempfile property="windowsFixFile"
              destDir="${maven.build.dir}/.."/>
    <echo message="project.wsdl.baseuri.fixed=${project.wsdl.baseuri}${line.separator}maven.build.dir.fixed=${maven.build.dir}"
          file="${windowsFixFile}"
          level="verbose"/>
    <replace file="${windowsFixFile}"
						 replaceFilterFile="${maven.build.dir}/../windows.properties"/>
    <property file="${windowsFixFile}"/>
    <delete file="${windowsFixFile}"
            deleteonexit="true"/>
  </preGoal>
  
  
  <!--
  	   Compilation preparations if generating Axis skeletons and stubs.
  -->
  <preGoal
     name="java:compile">
    <j:if test="${context.getVariable('project.axis.generate') == 'true'}">
      <path id="project.axis.compile.src.set"
	          location="${project.axis.generated.src.dir}"/>
      <m:addPath id="maven.compile.src.set"
	               refid="project.axis.compile.src.set"/>
      <attainGoal name="project:wsdl2java"/>
    </j:if>
  </preGoal>


  <!--
       Build the module and install the resulting WAR file in the local
       repository.
  -->
  <goal name="project:install"
     	  prereqs="war:install"
        description="Build and install war in local repository"/>

  
  <!--
       Build the module and install the resulting WAR file in the remote
       repository.
  -->
  <goal name="project:deploy"
        prereqs="war:deploy"
        description="Build and deploy war to remote repository"/>

</project>
