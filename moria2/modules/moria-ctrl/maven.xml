<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id$ -->

<!-- Module: moria-ctrl -->

<project
   xmlns:j="jelly:core"
   xmlns:m="jelly:maven"
   xmlns:u="jelly:util"
   default="project:install">

  <postGoal
     name="test:prepare-filesystem">
    <mkdir dir="${maven.build.dir}/test-logs"/>
    <mkdir dir="${project.test.generated.dir}"/>

    <!--
         Generate new test files, overwriting any existing files.
    -->
    <copy todir="${project.test.generated.dir}"
          overwrite="true">
      <fileset dir="${project.test.templates.dir}">
	      <include name="moria-base*.properties"/>
        <include name="dm-test-valid.properties"/>
        <include name="sm-test-valid.properties"/>
        <include name="directory-conf-test-valid.xml"/>
        <include name="am-test-valid.xml"/>
      </fileset>
    </copy>


    <!-- 
         Fix for Windows users:
         Write the template directory variable to a temporary file, replace all
         occurrences of the Windows-style '\' directory separator with the
         Java/Unix style '/' separator, and read it back into a new variable
         before deleting the temporary file.
    -->
    <tempfile property="project.test.generated.dir.file"
              destDir="${project.test.generated.dir}"/>
    <echo message="project.test.templates.dir.fixed=${project.test.templates.dir}"
          file="${project.test.generated.dir.file}"
          level="verbose"/>
    <replace file="${project.test.generated.dir.file}" 
             token="\"
             value="/"/>
    <property file="${project.test.generated.dir.file}"/>
    <echo message="${project.test.templates.dir.fixed}"/>
    <delete file="${project.test.generated.dir.file}"
            deleteonexit="true"/>
         
    <!--
         Update copied template files with the actual directory name.
    -->
    <replace
       dir="${project.test.generated.dir}"
       token="REPLACE_WITH_REALPATH"
       value="${project.test.templates.dir.fixed}">
      <include name="*.properties"/>
      <include name="*.xml"/>
    </replace>
    
  </postGoal>

  <goal
     name="project:install"
     prereqs="jar:install"
     description="Build and install jar in local repository"/>

  <goal
     name="project:deploy"
     prereqs="jar:deploy"
     description="Build and deploy jar to remote repository"/>    

</project>
