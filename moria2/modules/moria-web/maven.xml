<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id$ -->

<project
   xmlns:j="jelly:core"
   xmlns:m="jelly:maven"
   xmlns:u="jelly:util"
   default="project:install">

  <goal
     name="project:install"
     prereqs="war:install"
     description="Build and install this project in the local repository"/>

  <postGoal
     name="java:prepare-filesystem">

    <mkdir dir="${project.generated.src.dir}"/>
  </postGoal>

  <postGoal
     name="clean:clean">

    <delete dir="${project.generated.src.dir}"/>
  </postGoal>

  <preGoal
     name="java:compile">

    <path
       id="project.generated.src.compile.src.set"
       location="${project.generated.src.dir}"/>
    <m:addPath
       id="maven.compile.src.set"
       refid="project.generated.src.compile.src.set"/>
    <attainGoal name="project:wsdl2java"/>
    
  </preGoal>

  <!-- Remember to remove when source eventually is added -->

  <postGoal
     name="xdoc:register-reports">

    <attainGoal name="maven-javadoc-plugin:deregister"/>  
  </postGoal>

  <goal
     name="project:wsdl2java"
     description="Generate Java clients from a wsdl url"
     prereqs="java:prepare-filesystem">
    
    <taskdef
       name="axis-wsdl2java"
       classname="org.apache.axis.tools.ant.wsdl.Wsdl2javaAntTask">
      <classpath refid="maven.dependency.classpath"/>
    </taskdef>

    <!-- Iterate over WSDL files -->
    
    <u:tokenize var="versionList" delim=",">${project.wsdl.versions}</u:tokenize>

    <j:set var="wsdlName" value="Authentication.wsdl"/>

    <j:forEach var="version" items="${versionList}">
      <j:set var="inFile" value="${project.wsdl.baseuri}/${version}/${wsdlName}"/>
      <j:set var="outDir" value="${maven.war.webapp.dir}/WEB-INF/${version}"/>
      <u:available uri="${inFile}"> 
	<echo>Proccesing: ${inFile}</echo>

	<mkdir dir="${outDir}"/>
	<get src="${inFile}" dest="${outDir}/${wsdlName}"/>

	<replace
	   file="${outDir}/${wsdlName}"
	   token="REPLACE_WITH_ACTUAL_URL"
	   value="${project.deploy.url.prefix}/${version}/Authentication.wsdl"/>

	<!-- Generate skeletons for each wsdl -->

	<axis-wsdl2java
	   url="file://${outDir}/${wsdlName}"
	   output="${project.axis.generated.src}"
	   serverside="${project.axis.serverside}"
	   skeletondeploy="${project.axis.skeletondeploy}"
	   testcase="${project.axis.testcase}"
	   verbose="${project.axis.verbose}"/>
      </u:available> 
    </j:forEach>
  </goal>
</project>
