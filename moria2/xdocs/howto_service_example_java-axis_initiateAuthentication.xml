<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2004 UNINETT

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place - Suite 330, Boston, MA 02111-1307, USA.

$Id$
-->
<document>
	<properties>
		<title>Service Integration - initiateAuthentication Java/Axis Example</title>
		<author email="cato.olsen@uninett.no">Cato Olsen</author>
	</properties>
	<body>
		<section name="Example initiateAuthentication Java/Axis Code">
		<p>
		In this example the Moria2-enabled service initiates an authentication
		session, requesting the user attributes <i>tgt</i> and
		<i>eduPersonAffiliation</i>. Note that the service does not force the
		user to to go through interactive authentication, that is, does not deny
		the use of SSO; this would result in Moria2 not returning the <i>tgt</i>
		(ticket granting ticket) attribute, which is exclusively used for SSO.
		Once the user has been authenticated by Moria2, the user should be
		redirected back to the service URL
		<source>
http://www.service.org/STARTID<i>session</i>STOPID</source>
		where <i>session</i> is the session ID assigned to this authentication
		attempt by Moria2. This session ID may then be used by the service to
		retrieve the requested attributes.
		</p>
		<p>
		The SOAP implementation used in this example is
		<a href="http://ws.apache.org/axis/">Axis</a>.
		</p>
		<source>
import javax.xml.namespace.QName;
import org.apache.axis.client.Call;

...

Call call = new Call("http://localhost:8080/moria/v2_1/Authentication?WSDL"));
call.setUsername("service_username");
call.setPassword("service_password");
final Object[] parameters = { ["tgt", "eduPersonAffiliation"], 
                              "http://www.service.org/?STARTID=",  
                              "STOPID", 
                              new Boolean(false) };
final String loginURL = (String) call.invoke(new QName("initiateAuthentication"), 
                                             parameters);</source>
		<p>
        The above code assumes that Moria2 is deployed locally. The service
        should now redirect the user to the URL given by <code>loginURL</code>.
        </p>
		</section>
	</body>
</document>
