<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2004 UNINETT

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place - Suite 330, Boston, MA 02111-1307, USA.

$Id$
-->
<document>
	<properties>
		<title>Service Integration  - proxyAuthentication Java/Axis Example</title>
		<author email="cato.olsen@uninett.no">Cato Olsen</author>
	</properties>
	<body>
		<section name="proxyAuthentication Java/Axis Example">
		<p>
		Using a proxy ticket (here
		<code>MDA3AAABAVwaUL6fRITMT0eux25M*s2yHbgbhQ3pWf8V8qWpYsaBfMFx-h0dafwwM7OgzxU4blCDgcY</code>
		supplied by the parent Moria2-enabled service (through
		<code>getProxyTicket</code>, see separate
		<a href="howto_service_example_java-axis_getProxyTicket.html">Java/Axis example</a>),
		the subservice request an authentication confirmation for the user
		belonging to the authentication session pointed to by the proxy ticket.
		In addition, the subservice requests the attribute
		<i>eduPersonAffiliation</i>.
		</p>
		<p>
		The SOAP implementation used in this example is
		<a href="http://ws.apache.org/axis/">Axis</a>.
		</p>
		<source>
import javax.xml.namespace.QName;
import no.feide.moria.webservices.v2_0.Attribute;
import org.apache.axis.client.Call;
import org.apache.axis.encoding.ser.VectorDeserializerFactory;
import org.apache.axis.encoding.ser.VectorSerializerFactory;

...

Call call = new Call("http://localhost:8080/moria/v2_1/Authentication?WSDL");
call.setUsername("subservice_username");
call.setPassword("subservice_password");
final QName attributeQName = new QName("https://login.feide.no/moria/v2_1/Authentication", 
                                       "Attribute");
call.setReturnType(attributeQName);
VectorSerializerFactory serializer = new VectorSerializerFactory(Attribute.class, 
                                                                 attributeQName);
VectorDeserializerFactory deserializer = new VectorDeserializerFactory(Attribute.class,
                                                                       attributeQName);
call.registerTypeMapping(Attribute.class, 
                         attributeQName, 
                         serializer, 
                         deserializer);
call.addParameter("attributes", 
                  new QName("http://www.w3.org/2001/XMLSchema", "string[]"), 
                  String[].class, 
                  ParameterMode.IN);
call.addParameter("proxyTicket", 
                  new QName("http://www.w3.org/2001/XMLSchema", "string"), 
                  String.class, 
                  ParameterMode.IN);
final Object[] parameters = { ["eduPersonAffiliation"],
                              "MDA3AAABAVwaUL6fRITMT0eux25M*s2yHbgbhQ3pWf8V8qWpYsaBfMFx-h0dafwwM7OgzxU4blCDgcY" };
final Object returnedAttributes = call.invoke(new QName("http://localhost:8080/moria/v2_1/Authentication", "proxyAuthentication"),
                                              parameters);
final Attribute convertedAttributes = (Attribute[]) returnedAttributes;</source>
		<p>
        The above code assumes that Moria2 is deployed locally.
        </p>
		</section>
	</body>
</document>
